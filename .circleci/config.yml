version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: node:12.1.0-alpine
      - image: postgres:latest 
        environment:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: english_test
          POSTGRES_PORT: 5442
    steps: 
      - checkout 
      # - run:
      #   name: Setup Environment Variables
      #   command: |
      #     echo 'export TEST_DB_USER="user" >> $BASH_ENV
      #     echo 'export TEST_DB_PASSWORD="password" >> $BASH_ENV
      #     echo 'export TEST_DB_NAME="english_test" >> $BASH_ENV
      #     echo 'export TEST_DB_HOST="localhost" >> $BASH_ENV
      #     echo 'export TEST_DB_PORT="5442" >> $BASH_ENV
      - run:
          name: install-dependencies
          command: npm install
      # - save_cache: # special step to save the dependency cache
      #     key: dependency-cache-{{ checksum "package.json" }}
      #     paths:
      #       - ./node_modules
      - run: # run tests
          name: test
          command: npm run test
      # - run: # run coverage report
      #     name: code-coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: test-results.xml
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples